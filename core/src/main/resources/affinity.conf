akka {
  http.server {
    idle-timeout = infinite
    parsing.illegal-header-warnings = off
    #requests may be suspended so server should be given more time to generate response
    request-timeout = 30s
    max-connections = 1000
    remote-address-header = on
    server-header = "-" #dislabe sever disclosure by default
  }

  # remoting is disable dy default, distributed applications must define this as well as the remote actcor provider
  // remote {
  //  log-remote-lifecycle-events = off
  //  enabled-transports = ["akka.remote.netty.tcp"]
  //  netty.tcp {
  //    hostname = "127.0.0.1"
  //    port = 0
  //  }
  //}

  actor {
    //provider = "akka.remote.RemoteActorRefProvider"

    debug.autoreceive = off
    warn-about-java-serializer-usage = on

    serializers {
      avro = "io.amient.affinity.core.serde.avro.AvroSerdeProxy"
      option = "io.amient.affinity.core.serde.primitive.OptionSerde"
      set = "io.amient.affinity.core.serde.collection.SetSerde"
      sequence = "io.amient.affinity.core.serde.collection.SeqSerde"
      tuple = "io.amient.affinity.core.serde.primitive.TupleSerde"
      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
      unit = "io.amient.affinity.core.serde.primitive.UnitSerde"
    }

    serialization-bindings {
      "java.io.Serializable" = java
      "com.google.protobuf.Message" = proto
      "io.amient.affinity.avro.record.AvroRecord" = avro
      "scala.runtime.Null$" = avro
      "java.lang.Boolean" = avro
      "java.lang.Integer" = avro
      "java.lang.Long" = avro
      "java.lang.Float" = avro
      "java.lang.Double" = avro
      "java.lang.String" = avro
      "java.nio.ByteBuffer" = avro
      "scala.runtime.BoxedUnit" = unit
      "scala.collection.immutable.Set" = set
      "scala.collection.immutable.Set$Set1" = set
      "scala.collection.immutable.Set$Set2" = set
      "scala.collection.immutable.Set$Set3" = set
      "scala.collection.immutable.Set$Set4" = set
      "scala.collection.immutable.HashSet" = set
      "scala.collection.immutable.Seq" = sequence
      "scala.collection.immutable.IndexedSeq" = sequence
      "scala.collection.immutable.List" = sequence
      "scala.Some" = option
      "scala.None" = option
      "scala.None$" = option
      "scala.Tuple1" = tuple
      "scala.Tuple2" = tuple
      "scala.Tuple3" = tuple
      "scala.Tuple4" = tuple
      "scala.Tuple5" = tuple
      "scala.Tuple6" = tuple
      "scala.Tuple7" = tuple
      "scala.Tuple8" = tuple
      "scala.Tuple9" = tuple
      "scala.Tuple10" = tuple
      "scala.Tuple11" = tuple
      "scala.Tuple12" = tuple
      "scala.Tuple13" = tuple
      "scala.Tuple14" = tuple
      "scala.Tuple15" = tuple
      "scala.Tuple16" = tuple
      "scala.Tuple17" = tuple
      "scala.Tuple18" = tuple
      "scala.Tuple19" = tuple
      "scala.Tuple20" = tuple
      "scala.Tuple21" = tuple
      "scala.Tuple22" = tuple
    }
  }

  # Logging
  loglevel = "DEBUG"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-config-on-start = off
  log-dead-letters = 1
  log-dead-letters-during-shutdown = off

  # Disable legacy metrics in akka-cluster.
  cluster.metrics.enabled = off
  # Enable metrics extension in akka-cluster-metrics.
  #extensions=["akka.cluster.metrics.ClusterMetricsExtension"]
}