#!/usr/bin/env bash

fail() {
    MESSAGE=$1
    RED='\033[0;31m'
    NC='\033[0m'
    echo -e "$RED Failure: $MESSAGE $NC"
    exit 1;
}

continue() {
    result=$1
    MESSAGE=$2
    if [ $result -ne 0 ]; then
        fail $MESSAGE
    fi
}

branch_kafka() {
    BRANCH=$1
    C=$2

    MESSAGE="$BRANCH/checkout"
    echo $MESSAGE
    git checkout $BRANCH
    continue $? $MESSAGE

    MESSAGE="$BRANCH/merge $MASTER"
    echo $MESSAGE
    git merge $MASTER
    continue $? $MESSAGE

    if [ $ALL == "true" ]; then
        MESSAGE="$BRANCH/$C (all modules)"
        echo $MESSAGE
        ./gradlew $C
        continue $? $MESSAGE
    else
        MESSAGE="$BRANCH/:kafka:avro-formatter-kafka:$C"
        echo $MESSAGE
        ./gradlew :kafka:avro-formatter-kafka:$C
        continue $? $MESSAGE
        MESSAGE="$BRANCH/:kafka:avro-serde-kafka:$C"
        echo $MESSAGE
        ./gradlew :kafka:avro-serde-kafka:$C
        continue $? $MESSAGE
        MESSAGE="$BRANCH/:kafka:storage-kafka:$C"
        ./gradlew :kafka:storage-kafka:$C
        continue $? $MESSAGE
        MESSAGE="$BRANCH/:kafka:test-util-kafka:$C"
        ./gradlew :kafka:test-util-kafka:$C
        continue $? $MESSAGE
    fi
    continue $? "$BRANCH: $C"

}

Usage() {
    echo ""
    echo "Usage: ./zzz (test|build|install|publish)"
    echo ""
    echo "  This script will run the given gradle commands over the whole cross-compiled space of this project."
    echo ""
    echo "Example: ./zzz test"
    echo "  The above will run tests on the following branches, while attempting to merge master into each"
    echo "      master"
    echo "      master-kafka_0.10"
    echo ""
    fail "Missing at least one gradle command argument"
}


case "$1" in
    test)
        C="test --quiet"
        ALL="true"
        ;;
    build)
        C="build --quiet --exclude-task test --quiet"
        ALL="false"
        ;;
    install)
        C="install"
        ALL="false"
        ;;
    publish)
        C="uploadArchives -Pmaven-central --quiet"
        ALL="false"
        ;;
    *)
        Usage
        ;;
esac

MASTER="master"
git checkout $MASTER
continue $? "$MASTER/checkout"

#excute on master branch / all modules
MESSAGE="$MASTER/$C (all modules)"
echo $MESSAGE
./gradlew $C
continue $? $MESSAGE

branch_kafka "master-kafka_0.10" $C
branch_kafka "master-kafka_0.11" $C

git checkout $MASTER
continue $? "Checkout back to root branch"
